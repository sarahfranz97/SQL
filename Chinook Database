#Here are answers to potential questions that the Chinook company may have about their business.
#Questions 1-14 were provided, questions 15-20 were formulated by myself.

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT FirstName, LastName, customerid, country
FROM chinook.customers
WHERE country <> 'USA'
ORDER BY country;


#2. Show only the Customers from Brazil.

SELECT *
FROM chinook.customers
WHERE country = 'Brazil';


#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT customers.firstname, customers.lastname, invoices.invoiceid, invoices.invoicedate, invoices.billingcountry
FROM chinook.invoices
LEFT JOIN chinook.customers
ON invoices.customerid=customers.customerid
WHERE invoices.billingcountry = 'Brazil';


#4. Show the Employees who are Sales Agents.

SELECT * 
FROM chinook.employees
WHERE Title LIKE '%Sales%Agent%';


#5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct billingcountry 
FROM chinook.invoices
ORDER BY billingcountry;


#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT employees.LastName, employees.FirstName, invoices.InvoiceId
FROM chinook.employees
JOIN chinook.customers
ON employees.employeeid = customers.SupportRepId
JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId;


#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT invoices.total, customers.firstname, customers.lastname, customers.country, employees.lastname, employees.firstname
FROM invoices
JOIN customers
ON customers.CustomerId=invoices.CustomerId
JOIN employees
ON employees.EmployeeId=customers.SupportRepId
ORDER BY employees.LastName;


#8. How many Invoices were there in 2009?

select count(invoiceid) 
from invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31'


#9. What are the total sales for 2009?

SELECT sum(total)
FROM chinook.invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31'


#10. Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.name, invoice_items.invoicelineid
FROM tracks
JOIN invoice_items
ON tracks.trackid=invoice_items.TrackId


#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT tracks.name as track, artists.name as artist, invoice_items.InvoiceLineId
FROM chinook.invoice_items
LEFT join chinook.tracks
on invoice_items.TrackId=tracks.TrackId
INNER JOIN chinook.albums
ON albums.AlbumId=tracks.AlbumId
LEFT JOIN chinook.artists
ON artists.ArtistId=albums.ArtistId


#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.name as 'Track Name', albums.title as 'Album Title', media_types.Name as 'Media Type', genres.Name as 'Genre'
FROM tracks
JOIN albums
ON albums.AlbumId=tracks.AlbumId
JOIN media_types
ON media_types.MediaTypeId=tracks.MediaTypeId
JOIN genres
ON genres.GenreId=tracks.GenreId


#13. Show the total sales made by each sales agent.

SELECT employees.LastName, employees.FirstName, round(sum(invoices.Total), 2) as 'Total Sales'
FROM employees
JOIN customers
ON employees.EmployeeId=customers.SupportRepId
JOIN invoices
ON customers.CustomerId=invoices.CustomerId
WHERE employees.title = 'Sales Support Agent'
GROUP BY employees.LastName


#14. Which sales agent made the most dollars in sales in 2009?

SELECT employees.LastName, employees.FirstName, round(sum(total), 2) as 'Total Sales'
FROM employees
JOIN customers
ON employees.EmployeeId=customers.SupportRepId
JOIN invoices
ON customers.CustomerId=invoices.CustomerId
WHERE invoices.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
AND employees.Title='Sales Support Agent'
GROUP BY employees.LastName
ORDER BY round(sum(total), 2) DESC
LIMIT 1


#15. Which track had the most sales? Provide the amount of times it has been sold, track name, and artist. 

SELECT count(invoice_items.TrackId) as 'Total Sales', tracks.name as 'Track Name', artists.name
FROM invoice_items
JOIN tracks
ON invoice_items.TrackId=tracks.TrackId
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON artists.ArtistId=albums.ArtistId
GROUP BY tracks.Name
ORDER BY count(invoice_items.TrackId) desc
LIMIT 1


#16. Which artist sold the most tracks?

SELECT artists.name, count(invoice_items.trackid) as 'Tracks Sold'
FROM invoice_items
JOIN tracks
ON invoice_items.TrackId=tracks.TrackId
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON albums.ArtistId=artists.ArtistId
GROUP BY artists.name
ORDER BY count(invoice_items.trackid) DESC
LIMIT 1


#17. What album has the most tracks on it?

SELECT albums.title, artists.Name, count(tracks.trackid) as 'Track Count'
FROM tracks
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON albums.ArtistId=artists.ArtistId
GROUP BY albums.title
ORDER BY count(tracks.trackid) DESC
LIMIT 1


#18. What is the most popular genre based on sales?

SELECT genres.name as 'Genre', count(invoice_items.InvoiceId) as 'Genre Sales'
FROM genres
JOIN tracks
on genres.GenreId=tracks.GenreId
join invoice_items
on invoice_items.TrackId=tracks.TrackId
group by genres.Name
order by count(invoice_items.InvoiceId) DESC
LIMIT 1


#19. Which artist has the most available tracks?

SELECT artists.name, count(tracks.TrackId)
FROM tracks
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON albums.ArtistId=artists.ArtistId
GROUP BY artists.Name
ORDER BY count(tracks.TrackId) DESC
LIMIT 1


#20. How many customers are in each country? List from greatest to least amount of customers.

SELECT count(customerid) as 'Customers', country
FROM customers
GROUP BY country
ORDER BY count(customerid) DESC
